#! /usr/bin/env bash

function _render() {
  item=$LOCAL_NOTE_STORE/$1
  item_html=$item.html

  ruby -r 'github/markup' -e 'puts GitHub::Markup.render_s(GitHub::Markups::MARKUP_MARKDOWN, File.read((ARGV.first)))' $item > $item_html
  echo "rendered $item_html"
}

function _publish() {
  echo 'not implemented'
}

function _rm() {
  item=$1
  echo "deleting $item"

  if [ -d $item ]; then
    rm -rf $item
    aws s3 rm s3://$NOTES_S3_BUCKET/$item --recursive --profile $NOTES_AWS_PROFILE
  else
    if [ -e $item ]; then
      rm $item
      aws s3 rm s3://$NOTES_S3_BUCKET/$item --profile $NOTES_AWS_PROFILE
    else
      echo "'$item' not found."
      exit 1
    fi
  fi
}

function _ls() {
  arg=$1

  tree -C $LOCAL_NOTE_STORE/$arg
}

function _e() {
  arg=$1

  mkdir -p $LOCAL_NOTE_STORE/`echo $arg | rev | cut -d '/' -f 2- | rev`

  ${EDITOR:-vim} $LOCAL_NOTE_STORE/$arg
}

command=$1
arg=$2

case $command in
  pull)
    echo "pulling remote note store"
    aws s3 sync s3://$NOTES_S3_BUCKET $LOCAL_NOTE_STORE --profile $NOTES_AWS_PROFILE
    ;;
  push)
    echo "pushing local note store to remote"
    aws s3 sync $LOCAL_NOTE_STORE s3://$NOTES_S3_BUCKET --profile $NOTES_AWS_PROFILE
    ;;
  render) _render $arg;;
  publish) _publish $arg;;
  rm) _rm $arg;;
  ls) _ls $arg;;
  e) _e $arg;;
esac

